type = "directrequest"
schemaVersion = 1
name = "Verify NFT"
contractAddress = "0x14DD47ceb5070F66B1d5e7d07Fc9DfBd3082b7F8"
maxTaskDuration = "1m0s"
observationSource = """
    decode_log   [type=ethabidecodelog
                  abi="OracleRequest(bytes32 indexed specId, address requester, bytes32 requestId, uint256 payment, address callbackAddr, bytes4 callbackFunctionId, uint256 cancelExpiration, uint256 dataVersion, bytes data)"
                  data="$(jobRun.logData)"
                  topics="$(jobRun.logTopics)"]

    decode_cbor  [type=cborparse data="$(decode_log.data)"]
    fetch        [type="bridge" name="viewfunction" requestData="{\\"id\\": $(jobSpec.externalJobID), \\"data\\": { \\"contract\\": \\"0x8Adb9842a8526b3e285Aa289B0Ceb217709e8551\\", \\"function\\": \\"function ownerOf(uint256 tokenId) public view virtual override returns (address)\\", \\"inputParams\\": [$(decode_cbor.tokenId)]}}"]
    parse        [type=jsonparse path="data,result" data="$(fetch)"]
    encode_data  [type=ethabiencode abi="fulfill(bytes32 requestId, address owner)" data="{ \\"requestId\\": $(decode_log.requestId), \\"owner\\": $(parse) }"]
    encode_tx    [type=ethabiencode
                  abi="fulfill(bytes32 requestId, uint256 payment, address callbackAddress, bytes4 callbackFunctionId, uint256 expiration, bytes32 data)"
                  data="{\\"requestId\\": $(decode_log.requestId), \\"payment\\": $(decode_log.payment), \\"callbackAddress\\": $(decode_log.callbackAddr), \\"callbackFunctionId\\": $(decode_log.callbackFunctionId), \\"expiration\\": $(decode_log.cancelExpiration), \\"data\\": $(encode_data)}"
                 ]
    submit_tx    [type=ethtx to="0x14DD47ceb5070F66B1d5e7d07Fc9DfBd3082b7F8" data="$(encode_tx)"]
    decode_log -> decode_cbor -> fetch -> parse -> encode_data -> encode_tx -> submit_tx
"""